// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#ifndef PROTOBUF_network_2eproto__INCLUDED
#define PROTOBUF_network_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace messages {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_network_2eproto();
void protobuf_AssignDesc_network_2eproto();
void protobuf_ShutdownFile_network_2eproto();

class Datagram;
class Endpoint;
class MasterStatus;
class Ping;

enum Endpoint_Type {
  Endpoint_Type_UNDEFINED = 0,
  Endpoint_Type_ACQUISITOR = 1,
  Endpoint_Type_BROADCASTER = 2,
  Endpoint_Type_MASTER = 3,
  Endpoint_Type_TERMINAL = 4,
  Endpoint_Type_Endpoint_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Endpoint_Type_Endpoint_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Endpoint_Type_IsValid(int value);
const Endpoint_Type Endpoint_Type_Type_MIN = Endpoint_Type_UNDEFINED;
const Endpoint_Type Endpoint_Type_Type_MAX = Endpoint_Type_TERMINAL;
const int Endpoint_Type_Type_ARRAYSIZE = Endpoint_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Endpoint_Type_descriptor();
inline const ::std::string& Endpoint_Type_Name(Endpoint_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Endpoint_Type_descriptor(), value);
}
inline bool Endpoint_Type_Parse(
    const ::std::string& name, Endpoint_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Endpoint_Type>(
    Endpoint_Type_descriptor(), name, value);
}
enum Datagram_Type {
  Datagram_Type_UNDEFINED = 0,
  Datagram_Type_CLOSE = 5,
  Datagram_Type_HEARTBEAT = 7,
  Datagram_Type_PING = 10,
  Datagram_Type_PONG = 11,
  Datagram_Type_STATUS = 50,
  Datagram_Type_ACQ_GET_BODY_STREAM = 110,
  Datagram_Type_ACQ_END_BODY_STREAM = 111,
  Datagram_Type_ACQ_BODY = 115,
  Datagram_Type_LAYOUT_LAYOUT = 205,
  Datagram_Type_LAYOUT_LIST = 210,
  Datagram_Type_LAYOUT_CREATE = 211,
  Datagram_Type_LAYOUT_OPEN = 212,
  Datagram_Type_LAYOUT_RENAME = 213,
  Datagram_Type_LAYOUT_UPDATE = 214,
  Datagram_Type_LAYOUT_CLOSE = 215,
  Datagram_Type_LAYOUT_DELETE = 216,
  Datagram_Type_Datagram_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Datagram_Type_Datagram_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Datagram_Type_IsValid(int value);
const Datagram_Type Datagram_Type_Type_MIN = Datagram_Type_UNDEFINED;
const Datagram_Type Datagram_Type_Type_MAX = Datagram_Type_LAYOUT_DELETE;
const int Datagram_Type_Type_ARRAYSIZE = Datagram_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Datagram_Type_descriptor();
inline const ::std::string& Datagram_Type_Name(Datagram_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Datagram_Type_descriptor(), value);
}
inline bool Datagram_Type_Parse(
    const ::std::string& name, Datagram_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Datagram_Type>(
    Datagram_Type_descriptor(), name, value);
}
// ===================================================================

class Endpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:messages.Endpoint) */ {
 public:
  Endpoint();
  virtual ~Endpoint();

  Endpoint(const Endpoint& from);

  inline Endpoint& operator=(const Endpoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Endpoint& default_instance();

  void Swap(Endpoint* other);

  // implements Message ----------------------------------------------

  inline Endpoint* New() const { return New(NULL); }

  Endpoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Endpoint& from);
  void MergeFrom(const Endpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Endpoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Endpoint_Type Type;
  static const Type UNDEFINED =
    Endpoint_Type_UNDEFINED;
  static const Type ACQUISITOR =
    Endpoint_Type_ACQUISITOR;
  static const Type BROADCASTER =
    Endpoint_Type_BROADCASTER;
  static const Type MASTER =
    Endpoint_Type_MASTER;
  static const Type TERMINAL =
    Endpoint_Type_TERMINAL;
  static inline bool Type_IsValid(int value) {
    return Endpoint_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Endpoint_Type_Type_MIN;
  static const Type Type_MAX =
    Endpoint_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Endpoint_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Endpoint_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Endpoint_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Endpoint_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .messages.Endpoint.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::messages::Endpoint_Type type() const;
  void set_type(::messages::Endpoint_Type value);

  // @@protoc_insertion_point(class_scope:messages.Endpoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static Endpoint* default_instance_;
};
// -------------------------------------------------------------------

class Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:messages.Ping) */ {
 public:
  Ping();
  virtual ~Ping();

  Ping(const Ping& from);

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ping& default_instance();

  void Swap(Ping* other);

  // implements Message ----------------------------------------------

  inline Ping* New() const { return New(NULL); }

  Ping* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ping& from);
  void MergeFrom(const Ping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:messages.Ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static Ping* default_instance_;
};
// -------------------------------------------------------------------

class MasterStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:messages.MasterStatus) */ {
 public:
  MasterStatus();
  virtual ~MasterStatus();

  MasterStatus(const MasterStatus& from);

  inline MasterStatus& operator=(const MasterStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MasterStatus& default_instance();

  void Swap(MasterStatus* other);

  // implements Message ----------------------------------------------

  inline MasterStatus* New() const { return New(NULL); }

  MasterStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MasterStatus& from);
  void MergeFrom(const MasterStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MasterStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string activeLayout = 10;
  void clear_activelayout();
  static const int kActiveLayoutFieldNumber = 10;
  const ::std::string& activelayout() const;
  void set_activelayout(const ::std::string& value);
  void set_activelayout(const char* value);
  void set_activelayout(const char* value, size_t size);
  ::std::string* mutable_activelayout();
  ::std::string* release_activelayout();
  void set_allocated_activelayout(::std::string* activelayout);

  // @@protoc_insertion_point(class_scope:messages.MasterStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr activelayout_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static MasterStatus* default_instance_;
};
// -------------------------------------------------------------------

class Datagram : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:messages.Datagram) */ {
 public:
  Datagram();
  virtual ~Datagram();

  Datagram(const Datagram& from);

  inline Datagram& operator=(const Datagram& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Datagram& default_instance();

  void Swap(Datagram* other);

  // implements Message ----------------------------------------------

  inline Datagram* New() const { return New(NULL); }

  Datagram* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Datagram& from);
  void MergeFrom(const Datagram& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Datagram* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Datagram_Type Type;
  static const Type UNDEFINED =
    Datagram_Type_UNDEFINED;
  static const Type CLOSE =
    Datagram_Type_CLOSE;
  static const Type HEARTBEAT =
    Datagram_Type_HEARTBEAT;
  static const Type PING =
    Datagram_Type_PING;
  static const Type PONG =
    Datagram_Type_PONG;
  static const Type STATUS =
    Datagram_Type_STATUS;
  static const Type ACQ_GET_BODY_STREAM =
    Datagram_Type_ACQ_GET_BODY_STREAM;
  static const Type ACQ_END_BODY_STREAM =
    Datagram_Type_ACQ_END_BODY_STREAM;
  static const Type ACQ_BODY =
    Datagram_Type_ACQ_BODY;
  static const Type LAYOUT_LAYOUT =
    Datagram_Type_LAYOUT_LAYOUT;
  static const Type LAYOUT_LIST =
    Datagram_Type_LAYOUT_LIST;
  static const Type LAYOUT_CREATE =
    Datagram_Type_LAYOUT_CREATE;
  static const Type LAYOUT_OPEN =
    Datagram_Type_LAYOUT_OPEN;
  static const Type LAYOUT_RENAME =
    Datagram_Type_LAYOUT_RENAME;
  static const Type LAYOUT_UPDATE =
    Datagram_Type_LAYOUT_UPDATE;
  static const Type LAYOUT_CLOSE =
    Datagram_Type_LAYOUT_CLOSE;
  static const Type LAYOUT_DELETE =
    Datagram_Type_LAYOUT_DELETE;
  static inline bool Type_IsValid(int value) {
    return Datagram_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Datagram_Type_Type_MIN;
  static const Type Type_MAX =
    Datagram_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Datagram_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Datagram_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Datagram_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Datagram_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .messages.Datagram.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::messages::Datagram_Type type() const;
  void set_type(::messages::Datagram_Type value);

  // optional .google.protobuf.Any data = 100;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 100;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* mutable_data();
  ::google::protobuf::Any* release_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // @@protoc_insertion_point(class_scope:messages.Datagram)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::Any* data_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static Datagram* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Endpoint

// optional string name = 1;
inline void Endpoint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Endpoint::name() const {
  // @@protoc_insertion_point(field_get:messages.Endpoint.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Endpoint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:messages.Endpoint.name)
}
inline void Endpoint::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:messages.Endpoint.name)
}
inline void Endpoint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:messages.Endpoint.name)
}
inline ::std::string* Endpoint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:messages.Endpoint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Endpoint::release_name() {
  // @@protoc_insertion_point(field_release:messages.Endpoint.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Endpoint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:messages.Endpoint.name)
}

// optional .messages.Endpoint.Type type = 2;
inline void Endpoint::clear_type() {
  type_ = 0;
}
inline ::messages::Endpoint_Type Endpoint::type() const {
  // @@protoc_insertion_point(field_get:messages.Endpoint.type)
  return static_cast< ::messages::Endpoint_Type >(type_);
}
inline void Endpoint::set_type(::messages::Endpoint_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:messages.Endpoint.type)
}

// -------------------------------------------------------------------

// Ping

// optional uint64 time = 1;
inline void Ping::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Ping::time() const {
  // @@protoc_insertion_point(field_get:messages.Ping.time)
  return time_;
}
inline void Ping::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:messages.Ping.time)
}

// -------------------------------------------------------------------

// MasterStatus

// optional string activeLayout = 10;
inline void MasterStatus::clear_activelayout() {
  activelayout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MasterStatus::activelayout() const {
  // @@protoc_insertion_point(field_get:messages.MasterStatus.activeLayout)
  return activelayout_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MasterStatus::set_activelayout(const ::std::string& value) {
  
  activelayout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:messages.MasterStatus.activeLayout)
}
inline void MasterStatus::set_activelayout(const char* value) {
  
  activelayout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:messages.MasterStatus.activeLayout)
}
inline void MasterStatus::set_activelayout(const char* value, size_t size) {
  
  activelayout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:messages.MasterStatus.activeLayout)
}
inline ::std::string* MasterStatus::mutable_activelayout() {
  
  // @@protoc_insertion_point(field_mutable:messages.MasterStatus.activeLayout)
  return activelayout_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MasterStatus::release_activelayout() {
  // @@protoc_insertion_point(field_release:messages.MasterStatus.activeLayout)
  
  return activelayout_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MasterStatus::set_allocated_activelayout(::std::string* activelayout) {
  if (activelayout != NULL) {
    
  } else {
    
  }
  activelayout_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activelayout);
  // @@protoc_insertion_point(field_set_allocated:messages.MasterStatus.activeLayout)
}

// -------------------------------------------------------------------

// Datagram

// optional .messages.Datagram.Type type = 1;
inline void Datagram::clear_type() {
  type_ = 0;
}
inline ::messages::Datagram_Type Datagram::type() const {
  // @@protoc_insertion_point(field_get:messages.Datagram.type)
  return static_cast< ::messages::Datagram_Type >(type_);
}
inline void Datagram::set_type(::messages::Datagram_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:messages.Datagram.type)
}

// optional .google.protobuf.Any data = 100;
inline bool Datagram::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
inline void Datagram::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::google::protobuf::Any& Datagram::data() const {
  // @@protoc_insertion_point(field_get:messages.Datagram.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::google::protobuf::Any* Datagram::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:messages.Datagram.data)
  return data_;
}
inline ::google::protobuf::Any* Datagram::release_data() {
  // @@protoc_insertion_point(field_release:messages.Datagram.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Datagram::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:messages.Datagram.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace messages

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::messages::Endpoint_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::messages::Endpoint_Type>() {
  return ::messages::Endpoint_Type_descriptor();
}
template <> struct is_proto_enum< ::messages::Datagram_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::messages::Datagram_Type>() {
  return ::messages::Datagram_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_network_2eproto__INCLUDED
